name: Compile Examples

on: [pull_request, push]

jobs:
  compile-test:
    runs-on: ubuntu-latest

    env:
      # libraries to install for all boards
      UNIVERSAL_LIBRARIES: '"MFRC522" "Keyboard" "Mouse" "Servo" "LiquidCrystal" "CapacitiveSensor"'
      # sketch paths to compile (recursive) for all boards
      UNIVERSAL_SKETCH_PATHS: '"/github/home/Arduino/libraries/MFRC522/examples" "extras/shared/examples"' # "extras/shared/examples/01.Basics/AnalogReadSerial"'

    strategy:
      fail-fast: false

      matrix:
        board: [
          {"fqbn": "arduino:avr:yun", "type": "usb"},
          {"fqbn": "arduino:avr:uno", "type": "normal"},
          {"fqbn": "arduino:avr:diecimila", "type": "normal"},
          {"fqbn": "arduino:avr:nano", "type": "normal"},
          {"fqbn": "arduino:avr:mega", "type": "MultiSerial"},  #:cpu=atmega2560
          {"fqbn": "arduino:avr:megaADK", "type": "MultiSerial"},
          {"fqbn": "arduino:avr:leonardo", "type": "usb"},
          {"fqbn": "arduino:avr:leonardoeth", "type": "usb"},
          {"fqbn": "arduino:avr:micro", "type": "usb"},
          {"fqbn": "arduino:avr:esplora", "type": "usb"},
          {"fqbn": "arduino:avr:mini", "type": "normal"},
          {"fqbn": "arduino:avr:ethernet", "type": "normal"},
          {"fqbn": "arduino:avr:fio", "type": "normal"},
          {"fqbn": "arduino:avr:bt", "type": "normal"},
          {"fqbn": "arduino:avr:LilyPadUSB", "type": "usb"},
          {"fqbn": "arduino:avr:lilypad", "type": "normal"},
          {"fqbn": "arduino:avr:pro", "type": "normal"},
          #"arduino:avr:atmegang",
          {"fqbn": "arduino:avr:robotControl", "type": "control"},
          {"fqbn": "arduino:avr:robotMotor", "type": "control"},
          #"arduino:avr:gemma",
          {"fqbn": "arduino:avr:circuitplay32u4cat", "type": "usb"},
          {"fqbn": "arduino:avr:yunmini", "type": "usb"},
          {"fqbn": "arduino:avr:chiwawa", "type": "usb"},
          {"fqbn": "arduino:avr:one", "type": "usb"},
          {"fqbn": "arduino:avr:unowifi", "type": "normal"}
        ]

        # make board type-specific customizations to the matrix jobs
        include:
          # normal boards
          - board:
              type: "normal"
            additional-sketch-paths: '"libraries" "extras/shared/Blink" "extras/shared/BlinkWithoutDelay" "libs" "libsFirmata/examples/StandardFirmataPlus" "libsFirmata/examples/StandardFirmataEthernet" "libsFirmata/examples/StandardFirmata" "libsFirmata/examples/SimpleDigitalFirmata" "libsFirmata/examples/SimpleAnalogFirmata" "libsFirmata/examples/ServoFirmata" "libsFirmata/examples/OldStandardFirmata" "libsFirmata/examples/EchoString" "libsFirmata/examples/AnalogFirmata" "libsFirmata/examples/AllInputsFirmata"'
          # MultiSerial boards
          - board:
              type: "MultiSerial"
            additional-sketch-paths: '"libraries" "extras/shared/Blink" "extras/shared/BlinkWithoutDelay" "extras/shared/MultiSerial" "extras/shared/SerialPassthrough" "libs" "libsFirmata/examples/StandardFirmataPlus" "libsFirmata/examples/StandardFirmataEthernet" "libsFirmata/examples/StandardFirmata" "libsFirmata/examples/SimpleDigitalFirmata" "libsFirmata/examples/SimpleAnalogFirmata" "libsFirmata/examples/ServoFirmata" "libsFirmata/examples/OldStandardFirmata" "libsFirmata/examples/EchoString" "libsFirmata/examples/AnalogFirmata" "libsFirmata/examples/AllInputsFirmata"'
          # USB boards
          - board:
              type: "usb"
            additional-sketch-paths: '"libraries" "extras/shared/Blink" "extras/shared/BlinkWithoutDelay" "extras/shared/MultiSerial" "extras/shared/SerialPassthrough" "extras/shared/09.USB" "libs" "libsKeyboard/Keyboard" "libsFirmata/examples/StandardFirmataPlus" "libsFirmata/examples/StandardFirmataEthernet" "libsFirmata/examples/StandardFirmata" "libsFirmata/examples/SimpleDigitalFirmata" "libsFirmata/examples/SimpleAnalogFirmata" "libsFirmata/examples/ServoFirmata" "libsFirmata/examples/OldStandardFirmata" "libsFirmata/examples/EchoString" "libsFirmata/examples/AnalogFirmata" "libsFirmata/examples/AllInputsFirmata"'
          # RobotMotorControl boards
          - board:
              type: "control"
            additional-sketch-paths: '"libraries/Wire" "libraries/SPI" "libraries/EEPROM" "extras/shared/MultiSerial" "extras/shared/SerialPassthrough" "extras/shared/09.USB"'
          
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2    

      - name: Checkout Adafruit WiFiNINA
        uses: actions/checkout@v2
        with:
          repository: adafruit/WiFiNINA
          path: adafruit/WiFiNINA
          
      - name: Checkout Keyboard
        uses: actions/checkout@v2
        with:
          repository: arduino-libraries/Keyboard
          path: libsKeyboard/Keyboard

      - name: Checkout Servo
        uses: actions/checkout@v2
        with:
          repository: arduino-libraries/Servo
          path: libs/Servo

      - name: Checkout LiquidCrystal
        uses: actions/checkout@v2
        with:
          repository: arduino-libraries/LiquidCrystal
          path: libs/LiquidCrystal

      - name: Checkout Ethernet
        uses: actions/checkout@v2
        with:
          repository: arduino-libraries/Ethernet
          path: libs/Ethernet

      - name: Checkout CapacitiveSensor
        uses: actions/checkout@v2
        with:
          repository: arduino-libraries/CapacitiveSensor
          path: libs/CapacitiveSensor

      - name: Checkout SD
        uses: actions/checkout@v2
        with:
          repository: arduino-libraries/SD
          path: libs/SD

      - name: Checkout WiFi
        uses: actions/checkout@v2
        with:
          repository: arduino-libraries/WiFi
          path: libs/WiFi

      - name: Checkout Firmata
        uses: actions/checkout@v2
        with:
          repository: arduino-libraries/Firmata
          path: libsFirmata

      - name: Checkout Arduino_LSM9DS1
        uses: actions/checkout@v2
        with:
          repository: arduino-libraries/Arduino_LSM9DS1
          path: libs/Arduino_LSM9DS1

      - name: Checkout Arduino_JSON
        uses: actions/checkout@v2
        with:
          repository: arduino-libraries/Arduino_JSON
          path: libs/Arduino_JSON

      - name: Compile examples
        uses: arduino/actions/libraries/compile-examples@master
        with:
          fqbn: ${{ matrix.board.fqbn }}
          libraries: |
            - name: MFRC522
            - name: Keyboard
            - name: Mouse
            - name: Servo
            - name: LiquidCrystal
            - name: CapacitiveSensor
            - name: Ethernet
            - name: ArduinoBearSSL
            - name: Arduino_APDS9960
            - name: Servo
            - name: Arduino_LSM9DS1
            - name: ArduinoHttpClient
            - name: NTPClient
            - name: TFT
            - name: ArduinoMqttClient
            - name: Arduino_CRC32
            - name: Arduino_LSM6DS3
            - name: Stepper
            - name: SD
            - name: WiFi101
            - name: Arduino_JSON
            - name: Arduino_HTS221
            - name: Firmata
            - name: ArduinoMotorCarrier
            - name: ArduinoCloudThing
            - name: Arduino_DebugUtils
            - name: WiFi Link
            - name: 9 Axes Motion
            - name: Arduino_LPS22HB
            - name: CTC GO MOTIONS
            - name: ArduinoModbus
            - name: ArduinoIoTCloudBearSSL
            - name: ArduinoDMX
            - name: ArduinoRS485
            - name: Arduino_OAuth
            - name: CTC GO CORE
            - name: WiFi
            - name: ArduinoMDNS
            - name: Bridge
            - name: Temboo
            - name: ArduinoCloud
            - name: Madgwick
          #platforms: |
            # Use Board Manager to install the latest release of Arduino AVR Boards to get the toolchain
          #  - name: "arduino:avr"
            # Overwrite the Board Manager installation with the local platform
          #  - source-path: "./"
          #    name: "arduino:avr"
          sketch-paths: "${{ env.UNIVERSAL_SKETCH_PATHS }} ${{ matrix.additional-sketch-paths }}"
          #size-report-sketch: 'AnalogReadSerial'
          #enable-size-deltas-report: 'true'
          verbose: 'true'

      #- name: Save memory usage change report as artifact
      #  if: github.event_name == 'pull_request'
      #  uses: actions/upload-artifact@v1
      #  with:
      #    name: 'size-deltas-reports'
      #    path: 'size-deltas-reports'